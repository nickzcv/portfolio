{"ast":null,"code":"// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global'\n\n/* global window, global, document, navigator */\nexport var userAgent = typeof navigator !== 'undefined' && navigator.userAgent ? navigator.userAgent.toLowerCase() : '';\nvar window_ = typeof window !== 'undefined' ? window : global;\nvar global_ = typeof global !== 'undefined' ? global : window;\nvar document_ = typeof document !== 'undefined' ? document : {};\nexport { window_ as window, global_ as global, document_ as document };\n/*\n * Detect whether passive option is supported by the current browser.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   #Safely_detecting_option_support\n */\n\nvar passiveSupported = false;\n/* eslint-disable accessor-pairs, no-empty */\n\ntry {\n  var options = {\n    // This function will be called when the browser\n    // attempts to access the passive property.\n    get passive() {\n      passiveSupported = true;\n      return true;\n    }\n\n  };\n  window_.addEventListener('test', null, options);\n  window_.removeEventListener('test', null);\n} catch (err) {\n  passiveSupported = false;\n}\n\nexport { passiveSupported };","map":{"version":3,"sources":["../../../src/utils/globals.ts"],"names":[],"mappings":"AAAA;AACA;;AAEA;AACA,OAAO,IAAM,SAAS,GACpB,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAS,CAAC,SAA9C,GAA0D,SAAS,CAAC,SAAV,CAAoB,WAApB,EAA1D,GAA8F,EADzF;AAGP,IAAM,OAAO,GAAG,OAAO,MAAP,KAAkB,WAAlB,GAAgC,MAAhC,GAAyC,MAAzD;AACA,IAAM,OAAO,GAAG,OAAO,MAAP,KAAkB,WAAlB,GAAgC,MAAhC,GAAyC,MAAzD;AACA,IAAM,SAAS,GAAG,OAAO,QAAP,KAAoB,WAApB,GAAkC,QAAlC,GAA6C,EAA/D;AAEA,SAAQ,OAAO,IAAI,MAAnB,EAA2B,OAAO,IAAI,MAAtC,EAA8C,SAAS,IAAI,QAA3D;AAEA;;;;AAIG;;AACH,IAAI,gBAAgB,GAAG,KAAvB;AAEA;;AACA,IAAI;EACF,IAAM,OAAO,GAAG;IACd;IACA;IACA,IAAI,OAAJ,GAAW;MACT,gBAAgB,GAAG,IAAnB;MACA,OAAO,IAAP;IACD;;EANa,CAAhB;EASA,OAAO,CAAC,gBAAR,CAAyB,MAAzB,EAAiC,IAAjC,EAAuC,OAAvC;EACA,OAAO,CAAC,mBAAR,CAA4B,MAA5B,EAAoC,IAApC;AACD,CAZD,CAYE,OAAO,GAAP,EAAY;EACZ,gBAAgB,GAAG,KAAnB;AACD;;AAED,SAAQ,gBAAR","sourceRoot":"","sourcesContent":["// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global'\n/* global window, global, document, navigator */\nexport const userAgent = typeof navigator !== 'undefined' && navigator.userAgent ? navigator.userAgent.toLowerCase() : '';\nconst window_ = typeof window !== 'undefined' ? window : global;\nconst global_ = typeof global !== 'undefined' ? global : window;\nconst document_ = typeof document !== 'undefined' ? document : {};\nexport { window_ as window, global_ as global, document_ as document };\n/*\n * Detect whether passive option is supported by the current browser.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   #Safely_detecting_option_support\n */\nlet passiveSupported = false;\n/* eslint-disable accessor-pairs, no-empty */\ntry {\n    const options = {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        get passive() {\n            passiveSupported = true;\n            return true;\n        }\n    };\n    window_.addEventListener('test', null, options);\n    window_.removeEventListener('test', null);\n}\ncatch (err) {\n    passiveSupported = false;\n}\nexport { passiveSupported };\n//# sourceMappingURL=globals.js.map"]},"metadata":{},"sourceType":"module"}