{"ast":null,"code":"import _objectSpread from\"/home/nick/Documents/GitHub/portfolio/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from\"react\";import{useForm}from\"react-hook-form\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Contact=function Contact(){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.formState.errors;var onSubmit=function onSubmit(data,e){e.target.reset();console.log(\"Message submited: \"+JSON.stringify(data));};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"form\",{className:\"contact_form\",onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(\"div\",{className:\"first\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"name\",{required:true})),{},{type:\"text\",placeholder:\"Name\"})),errors.name&&errors.name.type===\"required\"&&/*#__PURE__*/_jsx(\"span\",{children:\"Name is required\"})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"email\",{required:\"Email is Required\",pattern:{value:/\\S+@\\S+\\.\\S+/,message:\"Entered value does not match email format\"}},{required:true})),{},{type:\"email\",placeholder:\"Email\"})),errors.email&&/*#__PURE__*/_jsx(\"span\",{role:\"alert\",children:errors.email.message})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"textarea\",_objectSpread(_objectSpread({},register(\"subject\",{required:true})),{},{placeholder:\"Message\"})),errors.subject&&/*#__PURE__*/_jsx(\"span\",{children:\"Subject is required.\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"tokyo_tm_button\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"white-fill-bg fill-black\",children:\"Send Message\"})})]})});};export default Contact;","map":{"version":3,"names":["React","useForm","Contact","register","handleSubmit","errors","formState","onSubmit","data","e","target","reset","console","log","JSON","stringify","required","name","type","pattern","value","message","email","subject"],"sources":["/home/nick/Documents/GitHub/portfolio/client/src/components/Contact.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Contact = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.target.reset();\r\n    console.log(\"Message submited: \" + JSON.stringify(data));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"contact_form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"first\">\r\n          <ul>\r\n            <li>\r\n              <input\r\n                {...register(\"name\", { required: true })}\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n              />\r\n              {errors.name && errors.name.type === \"required\" && (\r\n                <span>Name is required</span>\r\n              )}\r\n            </li>\r\n            {/* End first name field */}\r\n\r\n            <li>\r\n              <input\r\n                {...register(\r\n                  \"email\",\r\n                  {\r\n                    required: \"Email is Required\",\r\n                    pattern: {\r\n                      value: /\\S+@\\S+\\.\\S+/,\r\n                      message: \"Entered value does not match email format\",\r\n                    },\r\n                  },\r\n                  { required: true }\r\n                )}\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n              />\r\n              {errors.email && <span role=\"alert\">{errors.email.message}</span>}\r\n            </li>\r\n            {/* End email name field */}\r\n\r\n            <li>\r\n              <textarea\r\n                {...register(\"subject\", { required: true })}\r\n                placeholder=\"Message\"\r\n              ></textarea>\r\n              {errors.subject && <span>Subject is required.</span>}\r\n            </li>\r\n            {/* End subject  field */}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"tokyo_tm_button\">\r\n          <button type=\"submit\" className=\"white-fill-bg fill-black\">\r\n            Send Message\r\n          </button>\r\n        </div>\r\n        {/* End tokyo_tm_button */}\r\n      </form>\r\n      {/* End contact */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"mappings":"iIAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,iBAAxB,C,6IAEA,GAAMC,QAAO,CAAG,QAAVA,QAAU,EAAM,CACpB,aAIID,OAAO,EAJX,CACEE,QADF,UACEA,QADF,CAEEC,YAFF,UAEEA,YAFF,CAGeC,MAHf,UAGEC,SAHF,CAGeD,MAHf,CAMA,GAAME,SAAQ,CAAG,QAAXA,SAAW,CAACC,IAAD,CAAOC,CAAP,CAAa,CAC5BA,CAAC,CAACC,MAAF,CAASC,KAAT,GACAC,OAAO,CAACC,GAAR,CAAY,qBAAuBC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAnC,EACD,CAHD,CAKA,mBACE,sCACE,cAAM,SAAS,CAAC,cAAhB,CAA+B,QAAQ,CAAEJ,YAAY,CAACG,QAAD,CAArD,wBACE,YAAK,SAAS,CAAC,OAAf,uBACE,mCACE,mCACE,4CACMJ,QAAQ,CAAC,MAAD,CAAS,CAAEa,QAAQ,CAAE,IAAZ,CAAT,CADd,MAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,MAHd,GADF,CAMGX,MAAM,CAACY,IAAP,EAAeZ,MAAM,CAACY,IAAP,CAAYC,IAAZ,GAAqB,UAApC,eACC,0CAPJ,GADF,cAaE,mCACE,4CACMf,QAAQ,CACV,OADU,CAEV,CACEa,QAAQ,CAAE,mBADZ,CAEEG,OAAO,CAAE,CACPC,KAAK,CAAE,cADA,CAEPC,OAAO,CAAE,2CAFF,CAFX,CAFU,CASV,CAAEL,QAAQ,CAAE,IAAZ,CATU,CADd,MAYE,IAAI,CAAC,OAZP,CAaE,WAAW,CAAC,OAbd,GADF,CAgBGX,MAAM,CAACiB,KAAP,eAAgB,aAAM,IAAI,CAAC,OAAX,UAAoBjB,MAAM,CAACiB,KAAP,CAAaD,OAAjC,EAhBnB,GAbF,cAiCE,mCACE,+CACMlB,QAAQ,CAAC,SAAD,CAAY,CAAEa,QAAQ,CAAE,IAAZ,CAAZ,CADd,MAEE,WAAW,CAAC,SAFd,GADF,CAKGX,MAAM,CAACkB,OAAP,eAAkB,8CALrB,GAjCF,GADF,EADF,cA8CE,YAAK,SAAS,CAAC,iBAAf,uBACE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,0BAAhC,0BADF,EA9CF,GADF,EADF,CA0DD,CAtED,CAwEA,cAAerB,QAAf"},"metadata":{},"sourceType":"module"}