{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport { cloneElement } from 'react';\nimport * as PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\nvar propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string\n};\nvar sourceCounter = 0;\n\nfunction createSource(map, id, props) {\n  if (map.style && map.style._loaded) {\n    var options = _objectSpread({}, props);\n\n    delete options.id;\n    delete options.children;\n    map.addSource(id, options);\n    return map.getSource(id);\n  }\n\n  return null;\n}\n\nfunction updateSource(source, props, prevProps) {\n  assert(props.id === prevProps.id, 'source id changed');\n  assert(props.type === prevProps.type, 'source type changed');\n  var changedKey = '';\n  var changedKeyCount = 0;\n\n  for (var key in props) {\n    if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\n      changedKey = key;\n      changedKeyCount++;\n    }\n  }\n\n  if (!changedKeyCount) {\n    return;\n  }\n\n  var type = props.type;\n\n  if (type === 'geojson') {\n    source.setData(props.data);\n  } else if (type === 'image') {\n    source.updateImage({\n      url: props.url,\n      coordinates: props.coordinates\n    });\n  } else if ((type === 'canvas' || type === 'video') && changedKeyCount === 1 && changedKey === 'coordinates') {\n    source.setCoordinates(props.coordinates);\n  } else if (type === 'vector' && source.setUrl) {\n    switch (changedKey) {\n      case 'url':\n        source.setUrl(props.url);\n        break;\n\n      case 'tiles':\n        source.setTiles(props.tiles);\n        break;\n\n      default:\n    }\n  } else {\n    console.warn(\"Unable to update <Source> prop: \".concat(changedKey));\n  }\n}\n\nfunction Source(props) {\n  var context = useContext(MapContext);\n  var propsRef = useRef({\n    id: props.id,\n    type: props.type\n  });\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      setStyleLoaded = _useState2[1];\n\n  var id = useMemo(function () {\n    return props.id || \"jsx-source-\".concat(sourceCounter++);\n  }, []);\n  var map = context.map;\n  useEffect(function () {\n    if (map) {\n      var forceUpdate = function forceUpdate() {\n        return setStyleLoaded(function (version) {\n          return version + 1;\n        });\n      };\n\n      map.on('styledata', forceUpdate);\n      return function () {\n        map.off('styledata', forceUpdate);\n        requestAnimationFrame(function () {\n          if (map.style && map.style._loaded && map.getSource(id)) {\n            map.removeSource(id);\n          }\n        });\n      };\n    }\n\n    return undefined;\n  }, [map, id]);\n  var source = map && map.style && map.getSource(id);\n\n  if (source) {\n    updateSource(source, props, propsRef.current);\n  } else {\n    source = createSource(map, id, props);\n  }\n\n  propsRef.current = props;\n  return source && React.Children.map(props.children, function (child) {\n    return child && cloneElement(child, {\n      source: id\n    });\n  }) || null;\n}\n\nSource.propTypes = propTypes;\nexport default Source;","map":{"version":3,"sources":["../../../src/components/source.js"],"names":["propTypes","type","PropTypes","id","string","sourceCounter","map","options","assert","props","prevProps","changedKey","changedKeyCount","key","deepEqual","source","url","coordinates","console","context","useContext","propsRef","useRef","setStyleLoaded","useState","useMemo","useEffect","forceUpdate","version","requestAnimationFrame","updateSource","createSource","child","cloneElement","Source"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {useContext, useEffect, useMemo, useState, useRef} from 'react';\nimport {cloneElement} from 'react';\nimport * as PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\n\nconst propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string\n};\n\nlet sourceCounter = 0;\n\nfunction createSource(map, id, props) {\n  if (map.style && map.style._loaded) {\n    const options = {...props};\n    delete options.id;\n    delete options.children;\n    map.addSource(id, options);\n    return map.getSource(id);\n  }\n  return null;\n}\n\n/* eslint-disable complexity */\nfunction updateSource(source, props, prevProps) {\n  assert(props.id === prevProps.id, 'source id changed');\n  assert(props.type === prevProps.type, 'source type changed');\n\n  let changedKey = '';\n  let changedKeyCount = 0;\n\n  for (const key in props) {\n    if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\n      changedKey = key;\n      changedKeyCount++;\n    }\n  }\n\n  if (!changedKeyCount) {\n    return;\n  }\n\n  const {type} = props;\n  if (type === 'geojson') {\n    source.setData(props.data);\n  } else if (type === 'image') {\n    source.updateImage({url: props.url, coordinates: props.coordinates});\n  } else if (\n    (type === 'canvas' || type === 'video') &&\n    changedKeyCount === 1 &&\n    changedKey === 'coordinates'\n  ) {\n    source.setCoordinates(props.coordinates);\n  } else if (type === 'vector' && source.setUrl) {\n    // Added in 1.12.0:\n    // vectorTileSource.setTiles\n    // vectorTileSource.setUrl\n    switch (changedKey) {\n      case 'url':\n        source.setUrl(props.url);\n        break;\n      case 'tiles':\n        source.setTiles(props.tiles);\n        break;\n      default:\n    }\n  } else {\n    // eslint-disable-next-line\n    console.warn(`Unable to update <Source> prop: ${changedKey}`);\n  }\n}\n/* eslint-enable complexity */\n\nfunction Source(props) {\n  const context = useContext(MapContext);\n  const propsRef = useRef({id: props.id, type: props.type});\n  const [, setStyleLoaded] = useState(0);\n\n  const id = useMemo(() => props.id || `jsx-source-${sourceCounter++}`, []);\n  const {map} = context;\n\n  useEffect(() => {\n    if (map) {\n      const forceUpdate = () => setStyleLoaded(version => version + 1);\n      map.on('styledata', forceUpdate);\n\n      return () => {\n        map.off('styledata', forceUpdate);\n        /* global requestAnimationFrame */\n        // Do not remove source immediately because the\n        // dependent <Layer>s' componentWillUnmount() might not have been called\n        // Removing source before dependent layers will throw error\n        // TODO - find a more robust solution\n        requestAnimationFrame(() => {\n          if (map.style && map.style._loaded && map.getSource(id)) {\n            map.removeSource(id);\n          }\n        });\n      };\n    }\n    return undefined;\n  }, [map, id]);\n\n  let source = map && map.style && map.getSource(id);\n  if (source) {\n    updateSource(source, props, propsRef.current);\n  } else {\n    source = createSource(map, id, props);\n  }\n  propsRef.current = props;\n\n  return (\n    (source &&\n      React.Children.map(\n        props.children,\n        child =>\n          child &&\n          cloneElement(child, {\n            source: id\n          })\n      )) ||\n    null\n  );\n}\n\nSource.propTypes = propTypes;\nexport default Source;\n"]},"metadata":{},"sourceType":"module"}