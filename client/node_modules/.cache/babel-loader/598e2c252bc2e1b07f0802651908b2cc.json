{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useRef, useState, useEffect, useCallback } from 'react';\nimport * as PropTypes from 'prop-types';\nimport useMapControl, { mapControlDefaultProps, mapControlPropTypes } from './use-map-control';\nimport { getDynamicPosition, ANCHOR_POSITION } from '../utils/dynamic-position';\nimport { crispPercentage, crispPixel } from '../utils/crisp-pixel';\nvar propTypes = Object.assign({}, mapControlPropTypes, {\n  className: PropTypes.string,\n  longitude: PropTypes.number.isRequired,\n  latitude: PropTypes.number.isRequired,\n  altitude: PropTypes.number,\n  offsetLeft: PropTypes.number,\n  offsetTop: PropTypes.number,\n  tipSize: PropTypes.number,\n  closeButton: PropTypes.bool,\n  closeOnClick: PropTypes.bool,\n  anchor: PropTypes.oneOf(Object.keys(ANCHOR_POSITION)),\n  dynamicPosition: PropTypes.bool,\n  sortByDepth: PropTypes.bool,\n  onClose: PropTypes.func\n});\nvar defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  altitude: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  tipSize: 10,\n  anchor: 'bottom',\n  dynamicPosition: true,\n  sortByDepth: false,\n  closeButton: true,\n  closeOnClick: true,\n  onClose: function onClose() {}\n});\n\nfunction getPosition(props, viewport, el, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      x = _ref2[0],\n      y = _ref2[1];\n\n  var anchor = props.anchor,\n      dynamicPosition = props.dynamicPosition,\n      tipSize = props.tipSize;\n\n  if (el) {\n    return dynamicPosition ? getDynamicPosition({\n      x: x,\n      y: y,\n      anchor: anchor,\n      padding: tipSize,\n      width: viewport.width,\n      height: viewport.height,\n      selfWidth: el.clientWidth,\n      selfHeight: el.clientHeight\n    }) : anchor;\n  }\n\n  return anchor;\n}\n\nfunction getContainerStyle(props, viewport, el, _ref3, positionType) {\n  var _ref4 = _slicedToArray(_ref3, 3),\n      x = _ref4[0],\n      y = _ref4[1],\n      z = _ref4[2];\n\n  var offsetLeft = props.offsetLeft,\n      offsetTop = props.offsetTop,\n      sortByDepth = props.sortByDepth;\n  var anchorPosition = ANCHOR_POSITION[positionType];\n  var left = x + offsetLeft;\n  var top = y + offsetTop;\n  var xPercentage = crispPercentage(el, -anchorPosition.x * 100);\n  var yPercentage = crispPercentage(el, -anchorPosition.y * 100, 'y');\n  var style = {\n    position: 'absolute',\n    transform: \"\\n      translate(\".concat(xPercentage, \"%, \").concat(yPercentage, \"%)\\n      translate(\").concat(crispPixel(left), \"px, \").concat(crispPixel(top), \"px)\\n    \"),\n    display: undefined,\n    zIndex: undefined\n  };\n\n  if (!sortByDepth) {\n    return style;\n  }\n\n  if (z > 1 || z < -1 || x < 0 || x > viewport.width || y < 0 || y > viewport.height) {\n    style.display = 'none';\n  } else {\n    style.zIndex = Math.floor((1 - z) / 2 * 100000);\n  }\n\n  return style;\n}\n\nfunction Popup(props) {\n  var contentRef = useRef(null);\n  var thisRef = useMapControl(props);\n  var context = thisRef.context,\n      containerRef = thisRef.containerRef;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      setLoaded = _useState2[1];\n\n  useEffect(function () {\n    setLoaded(true);\n  }, [contentRef.current]);\n  useEffect(function () {\n    if (context.eventManager && props.closeOnClick) {\n      var clickCallback = function clickCallback() {\n        return thisRef.props.onClose();\n      };\n\n      context.eventManager.on('anyclick', clickCallback);\n      return function () {\n        context.eventManager.off('anyclick', clickCallback);\n      };\n    }\n\n    return undefined;\n  }, [context.eventManager, props.closeOnClick]);\n  var viewport = context.viewport;\n  var className = props.className,\n      longitude = props.longitude,\n      latitude = props.latitude,\n      altitude = props.altitude,\n      tipSize = props.tipSize,\n      closeButton = props.closeButton,\n      children = props.children;\n  var position = viewport.project([longitude, latitude, altitude]);\n  var positionType = getPosition(props, viewport, contentRef.current, position);\n  var containerStyle = getContainerStyle(props, viewport, containerRef.current, position, positionType);\n  var onClickCloseButton = useCallback(function (evt) {\n    thisRef.props.onClose();\n    var eventManager = thisRef.context.eventManager;\n\n    if (eventManager) {\n      eventManager.once('click', function (e) {\n        return e.stopPropagation();\n      }, evt.target);\n    }\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"mapboxgl-popup mapboxgl-popup-anchor-\".concat(positionType, \" \").concat(className),\n    style: containerStyle,\n    ref: containerRef\n  }, React.createElement(\"div\", {\n    key: \"tip\",\n    className: \"mapboxgl-popup-tip\",\n    style: {\n      borderWidth: tipSize\n    }\n  }), React.createElement(\"div\", {\n    key: \"content\",\n    ref: contentRef,\n    className: \"mapboxgl-popup-content\"\n  }, closeButton && React.createElement(\"button\", {\n    key: \"close-button\",\n    className: \"mapboxgl-popup-close-button\",\n    type: \"button\",\n    onClick: onClickCloseButton\n  }, \"\\xD7\"), children));\n}\n\nPopup.propTypes = propTypes;\nPopup.defaultProps = defaultProps;\nexport default React.memo(Popup);","map":{"version":3,"sources":["../../../src/components/popup.js"],"names":["propTypes","className","PropTypes","longitude","latitude","altitude","offsetLeft","offsetTop","tipSize","closeButton","closeOnClick","anchor","Object","dynamicPosition","sortByDepth","onClose","func","defaultProps","x","y","props","getDynamicPosition","padding","width","viewport","height","selfWidth","el","selfHeight","clientHeight","z","anchorPosition","ANCHOR_POSITION","left","top","xPercentage","crispPercentage","yPercentage","style","position","transform","crispPixel","display","zIndex","undefined","Math","contentRef","useRef","thisRef","useMapControl","context","containerRef","setLoaded","useState","useEffect","clickCallback","children","positionType","getPosition","containerStyle","getContainerStyle","onClickCloseButton","useCallback","eventManager","e","evt","borderWidth","Popup","React"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {useRef, useState, useEffect, useCallback} from 'react';\nimport * as PropTypes from 'prop-types';\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nimport {getDynamicPosition, ANCHOR_POSITION} from '../utils/dynamic-position';\n\nimport {crispPercentage, crispPixel} from '../utils/crisp-pixel';\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Longitude of the anchor point\n  longitude: PropTypes.number.isRequired,\n  // Latitude of the anchor point\n  latitude: PropTypes.number.isRequired,\n  // Altitude of the anchor point\n  altitude: PropTypes.number,\n  // Offset from the left\n  offsetLeft: PropTypes.number,\n  // Offset from the top\n  offsetTop: PropTypes.number,\n  // Size of the tip\n  tipSize: PropTypes.number,\n  // Whether to show close button\n  closeButton: PropTypes.bool,\n  // Whether to close on click\n  closeOnClick: PropTypes.bool,\n  // The popup's location relative to the coordinate\n  anchor: PropTypes.oneOf(Object.keys(ANCHOR_POSITION)),\n  // Whether the popup anchor should be auto-adjusted to fit within the container\n  dynamicPosition: PropTypes.bool,\n  // Whether popups should be sorted by depth. Useful when using multiple popups with tilted map.\n  sortByDepth: PropTypes.bool,\n  // Callback when component is closed\n  onClose: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  altitude: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  tipSize: 10,\n  anchor: 'bottom',\n  dynamicPosition: true,\n  sortByDepth: false,\n  closeButton: true,\n  closeOnClick: true,\n  onClose: () => {}\n});\n\nfunction getPosition(props, viewport, el, [x, y]) {\n  const {anchor, dynamicPosition, tipSize} = props;\n\n  if (el) {\n    return dynamicPosition\n      ? getDynamicPosition({\n          x,\n          y,\n          anchor,\n          padding: tipSize,\n          width: viewport.width,\n          height: viewport.height,\n          selfWidth: el.clientWidth,\n          selfHeight: el.clientHeight\n        })\n      : anchor;\n  }\n\n  return anchor;\n}\n\nfunction getContainerStyle(props, viewport, el, [x, y, z], positionType) {\n  const {offsetLeft, offsetTop, sortByDepth} = props;\n  const anchorPosition = ANCHOR_POSITION[positionType];\n  const left = x + offsetLeft;\n  const top = y + offsetTop;\n\n  const xPercentage = crispPercentage(el, -anchorPosition.x * 100);\n  const yPercentage = crispPercentage(el, -anchorPosition.y * 100, 'y');\n  const style = {\n    position: 'absolute',\n    transform: `\n      translate(${xPercentage}%, ${yPercentage}%)\n      translate(${crispPixel(left)}px, ${crispPixel(top)}px)\n    `,\n    display: undefined,\n    zIndex: undefined\n  };\n\n  if (!sortByDepth) {\n    return style;\n  }\n  if (z > 1 || z < -1 || x < 0 || x > viewport.width || y < 0 || y > viewport.height) {\n    // clipped\n    style.display = 'none';\n  } else {\n    // use z-index to rearrange components\n    style.zIndex = Math.floor(((1 - z) / 2) * 100000);\n  }\n\n  return style;\n}\n\n/*\n * PureComponent doesn't update when context changes.\n * The only way is to implement our own shouldComponentUpdate here. Considering\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\n * is almost always triggered by a viewport change, we almost definitely need to\n * recalculate the popup's position when the parent re-renders.\n */\nfunction Popup(props) {\n  const contentRef = useRef(null);\n  const thisRef = useMapControl(props);\n  const {context, containerRef} = thisRef;\n  const [, setLoaded] = useState(false);\n\n  useEffect(() => {\n    // Container just got a size, re-calculate position\n    setLoaded(true);\n  }, [contentRef.current]);\n\n  useEffect(() => {\n    if (context.eventManager && props.closeOnClick) {\n      const clickCallback = () => thisRef.props.onClose();\n      context.eventManager.on('anyclick', clickCallback);\n\n      return () => {\n        context.eventManager.off('anyclick', clickCallback);\n      };\n    }\n    return undefined;\n  }, [context.eventManager, props.closeOnClick]);\n\n  const {viewport} = context;\n  const {className, longitude, latitude, altitude, tipSize, closeButton, children} = props;\n\n  const position = viewport.project([longitude, latitude, altitude]);\n\n  const positionType = getPosition(props, viewport, contentRef.current, position);\n  const containerStyle = getContainerStyle(\n    props,\n    viewport,\n    containerRef.current,\n    position,\n    positionType\n  );\n\n  const onClickCloseButton = useCallback(evt => {\n    thisRef.props.onClose();\n\n    const {eventManager} = thisRef.context;\n    if (eventManager) {\n      // Using with InteractiveMap\n      // After we call `onClose` on `anyclick`, this component will be unmounted\n      // at which point we unregister the event listeners and stop blocking propagation.\n      // Then after a short delay a `click` event will fire\n      // Attach a one-time event listener here to prevent it from triggering `onClick` of the base map\n      eventManager.once('click', e => e.stopPropagation(), evt.target);\n    }\n  }, []);\n\n  return (\n    <div\n      className={`mapboxgl-popup mapboxgl-popup-anchor-${positionType} ${className}`}\n      // @ts-ignore\n      style={containerStyle}\n      ref={containerRef}\n    >\n      <div key=\"tip\" className=\"mapboxgl-popup-tip\" style={{borderWidth: tipSize}} />\n      <div key=\"content\" ref={contentRef} className=\"mapboxgl-popup-content\">\n        {closeButton && (\n          <button\n            key=\"close-button\"\n            className=\"mapboxgl-popup-close-button\"\n            type=\"button\"\n            onClick={onClickCloseButton}\n          >\n            ×\n          </button>\n        )}\n        {children}\n      </div>\n    </div>\n  );\n}\n\nPopup.propTypes = propTypes;\nPopup.defaultProps = defaultProps;\n\nexport default React.memo(Popup);\n"]},"metadata":{},"sourceType":"module"}