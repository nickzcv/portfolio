{"ast":null,"code":"import _classCallCheck from \"/home/nick/Documents/GitHub/portfolio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/nick/Documents/GitHub/portfolio/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/nick/Documents/GitHub/portfolio/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/nick/Documents/GitHub/portfolio/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Input from './input';\nvar EVENT_TYPE = 'contextmenu';\n\nvar ContextmenuInput = /*#__PURE__*/function (_Input) {\n  _inherits(ContextmenuInput, _Input);\n\n  var _super = _createSuper(ContextmenuInput);\n\n  function ContextmenuInput(element, callback, options) {\n    var _this;\n\n    _classCallCheck(this, ContextmenuInput);\n\n    _this = _super.call(this, element, callback, options);\n\n    _this.handleEvent = function (event) {\n      if (!_this.options.enable) {\n        return;\n      }\n\n      _this.callback({\n        type: EVENT_TYPE,\n        center: {\n          x: event.clientX,\n          y: event.clientY\n        },\n        srcEvent: event,\n        pointerType: 'mouse',\n        target: event.target\n      });\n    };\n\n    element.addEventListener('contextmenu', _this.handleEvent);\n    return _this;\n  }\n\n  _createClass(ContextmenuInput, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.element.removeEventListener('contextmenu', this.handleEvent);\n    }\n    /**\n     * Enable this input (begin processing events)\n     * if the specified event type is among those handled by this input.\n     */\n\n  }, {\n    key: \"enableEventType\",\n    value: function enableEventType(eventType, enabled) {\n      if (eventType === EVENT_TYPE) {\n        this.options.enable = enabled;\n      }\n    }\n  }]);\n\n  return ContextmenuInput;\n}(Input);\n\nexport { ContextmenuInput as default };","map":{"version":3,"sources":["../../../src/inputs/contextmenu-input.ts"],"names":[],"mappings":";;;;AACA,OAAO,KAAP,MAAkC,SAAlC;AAEA,IAAM,UAAU,GAAG,aAAnB;;IAEqB,gB;;;;;EACnB,0BACE,OADF,EAEE,QAFF,EAGE,OAHF,EAGuB;IAAA;;IAAA;;IAErB,0BAAM,OAAN,EAAe,QAAf,EAAyB,OAAzB;;IAmBF,MAAA,WAAA,GAAc,UAAC,KAAD,EAAsB;MAClC,IAAI,CAAC,MAAK,OAAL,CAAa,MAAlB,EAA0B;QACxB;MACD;;MAED,MAAK,QAAL,CAAc;QACZ,IAAI,EAAE,UADM;QAEZ,MAAM,EAAE;UACN,CAAC,EAAE,KAAK,CAAC,OADH;UAEN,CAAC,EAAE,KAAK,CAAC;QAFH,CAFI;QAMZ,QAAQ,EAAE,KANE;QAOZ,WAAW,EAAE,OAPD;QAQZ,MAAM,EAAE,KAAK,CAAC;MARF,CAAd;IAUD,CAfD;;IAjBE,OAAO,CAAC,gBAAR,CAAyB,aAAzB,EAAwC,MAAK,WAA7C;IAJqB;EAKtB;;;;WAED,mBAAO;MACL,KAAK,OAAL,CAAa,mBAAb,CAAiC,aAAjC,EAAgD,KAAK,WAArD;IACD;IAED;;;AAGG;;;;WACH,yBAAgB,SAAhB,EAAmC,OAAnC,EAAmD;MACjD,IAAI,SAAS,KAAK,UAAlB,EAA8B;QAC5B,KAAK,OAAL,CAAa,MAAb,GAAsB,OAAtB;MACD;IACF;;;;EAvB2C,K;;SAAzB,gB","sourceRoot":"","sourcesContent":["import Input from './input';\nconst EVENT_TYPE = 'contextmenu';\nexport default class ContextmenuInput extends Input {\n    constructor(element, callback, options) {\n        super(element, callback, options);\n        this.handleEvent = (event) => {\n            if (!this.options.enable) {\n                return;\n            }\n            this.callback({\n                type: EVENT_TYPE,\n                center: {\n                    x: event.clientX,\n                    y: event.clientY\n                },\n                srcEvent: event,\n                pointerType: 'mouse',\n                target: event.target\n            });\n        };\n        element.addEventListener('contextmenu', this.handleEvent);\n    }\n    destroy() {\n        this.element.removeEventListener('contextmenu', this.handleEvent);\n    }\n    /**\n     * Enable this input (begin processing events)\n     * if the specified event type is among those handled by this input.\n     */\n    enableEventType(eventType, enabled) {\n        if (eventType === EVENT_TYPE) {\n            this.options.enable = enabled;\n        }\n    }\n}\n//# sourceMappingURL=contextmenu-input.js.map"]},"metadata":{},"sourceType":"module"}